use ibig::prelude::*;

#[test]
fn test_ubig_shl() {
    assert_eq!(ubig!(0) << 17u32, ubig!(0));
    assert_eq!(ubig!(0) << (1u128 << 127), ubig!(0));
    assert_eq!(ubig!(0) << (ubig!(1) << 1000u32), ubig!(0));

    assert_eq!(ubig!(0xef) << 0u32, ubig!(0xef));
    assert_eq!(ubig!(0xef) << 4u32, ubig!(0xef0));
    assert_eq!(ubig!(0xef) << ubig!(4), ubig!(0xef0));
    assert_eq!(
        ubig!(0xef) << 128u32,
        ubig!(_0xef00000000000000000000000000000000)
    );
    assert_eq!(
        ubig!(0xef) << 124u32,
        ubig!(_0xef0000000000000000000000000000000)
    );
    assert_eq!(ubig!(0xef) << 10240u32, ubig!(_0xef
    assert_eq!(ubig!(0xef) << 10244u32, ubig!(_0xef

    assert_eq!(
        ubig!(_0x0123456789abcdef0123456789abcdef) << 4u32,
        ubig!(_0x0123456789abcdef0123456789abcdef0)
    );
    assert_eq!(
        ubig!(_0x0123456789abcdef0123456789abcdef) << 128u32,
        ubig!(_0x0123456789abcdef0123456789abcdef00000000000000000000000000000000)
    );
    assert_eq!(
        ubig!(_0x0123456789abcdef0123456789abcdef) << 124u32,
        ubig!(_0x0123456789abcdef0123456789abcdef0000000000000000000000000000000)
    );
    assert_eq!(ubig!(_0x0123456789abcdef0123456789abcdef) << 10240u32,
               ubig!(_0x0123456789abcdef0123456789abcdef
    assert_eq!(ubig!(_0x0123456789abcdef0123456789abcdef) << 10244u32,
               ubig!(_0x0123456789abcdef0123456789abcdef

    assert_eq!(&ubig!(0xef) << 4u32, ubig!(0xef0));
    assert_eq!(ubig!(0xef) << &4u32, ubig!(0xef0));
    assert_eq!(&ubig!(0xef) << &4u32, ubig!(0xef0));

    assert_eq!(&ubig!(0xef) << ubig!(4), ubig!(0xef0));
    assert_eq!(ubig!(0xef) << &ubig!(4), ubig!(0xef0));
    assert_eq!(&ubig!(0xef) << &ubig!(4), ubig!(0xef0));

    assert_eq!(ubig!(0xef) << 4i32, ubig!(0xef0));
    assert_eq!(&ubig!(0xef) << 4i32, ubig!(0xef0));
    assert_eq!(ubig!(0xef) << &4i32, ubig!(0xef0));
    assert_eq!(&ubig!(0xef) << &4i32, ubig!(0xef0));

    assert_eq!(ubig!(0xef) << ibig!(4), ubig!(0xef0));
    assert_eq!(&ubig!(0xef) << ibig!(4), ubig!(0xef0));
    assert_eq!(ubig!(0xef) << &ibig!(4), ubig!(0xef0));
    assert_eq!(&ubig!(0xef) << &ibig!(4), ubig!(0xef0));
}

#[test]
#[should_panic]
fn test_ubig_shl_too_large() {
    let _ = ubig!(1) << (1u128 << 127);
}

#[test]
#[should_panic]
fn test_ubig_shl_negative() {
    let _ = ubig!(1) << (-3i32);
}

#[test]
fn test_ibig_shl() {
    assert_eq!(ibig!(0xef) << 4u32, ibig!(0xef0));
    assert_eq!(&ibig!(0xef) << 4u32, ibig!(0xef0));
    assert_eq!(ibig!(0xef) << &4u32, ibig!(0xef0));
    assert_eq!(&ibig!(0xef) << &4u32, ibig!(0xef0));

    assert_eq!(ibig!(0xef) << ubig!(4), ibig!(0xef0));
    assert_eq!(&ibig!(0xef) << ubig!(4), ibig!(0xef0));
    assert_eq!(ibig!(0xef) << &ubig!(4), ibig!(0xef0));
    assert_eq!(&ibig!(0xef) << &ubig!(4), ibig!(0xef0));

    assert_eq!(ibig!(0xef) << ibig!(4), ibig!(0xef0));
    assert_eq!(&ibig!(0xef) << ibig!(4), ibig!(0xef0));
    assert_eq!(ibig!(0xef) << &ibig!(4), ibig!(0xef0));
    assert_eq!(&ibig!(0xef) << &ibig!(4), ibig!(0xef0));
}

#[test]
fn test_shl_assign() {
    let mut a = ubig!(0xef);
    a <<= 4;
    assert_eq!(a, ubig!(0xef0));
}
